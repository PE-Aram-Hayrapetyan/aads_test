// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { GetUsersDashboardPostsError, GetUsersDashboardPostsResponse, PostUsersDashboardPostsData, PostUsersDashboardPostsError, PostUsersDashboardPostsResponse, GetUsersDashboardPostsByIdData, GetUsersDashboardPostsByIdError, GetUsersDashboardPostsByIdResponse, PutUsersDashboardPostsByIdData, PutUsersDashboardPostsByIdError, PutUsersDashboardPostsByIdResponse, DeleteUsersDashboardPostsByIdData, DeleteUsersDashboardPostsByIdError, DeleteUsersDashboardPostsByIdResponse, GetUsersDashboardFriendsError, GetUsersDashboardFriendsResponse, PostUsersDashboardFriendsData, PostUsersDashboardFriendsError, PostUsersDashboardFriendsResponse, PutUsersDashboardFriendsByIdData, PutUsersDashboardFriendsByIdError, PutUsersDashboardFriendsByIdResponse, DeleteUsersDashboardFriendsByIdData, DeleteUsersDashboardFriendsByIdError, DeleteUsersDashboardFriendsByIdResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * Get all posts
 */
export const getUsersDashboardPosts = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetUsersDashboardPostsResponse, GetUsersDashboardPostsError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/posts'
}); };

/**
 * Create a post
 */
export const postUsersDashboardPosts = <ThrowOnError extends boolean = false>(options?: Options<PostUsersDashboardPostsData, ThrowOnError>) => { return (options?.client ?? client).post<PostUsersDashboardPostsResponse, PostUsersDashboardPostsError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/posts'
}); };

/**
 * Get a single post
 */
export const getUsersDashboardPostsById = <ThrowOnError extends boolean = false>(options: Options<GetUsersDashboardPostsByIdData, ThrowOnError>) => { return (options?.client ?? client).get<GetUsersDashboardPostsByIdResponse, GetUsersDashboardPostsByIdError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/posts/{id}'
}); };

/**
 * Update a post
 */
export const putUsersDashboardPostsById = <ThrowOnError extends boolean = false>(options: Options<PutUsersDashboardPostsByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutUsersDashboardPostsByIdResponse, PutUsersDashboardPostsByIdError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/posts/{id}'
}); };

/**
 * Delete a post
 */
export const deleteUsersDashboardPostsById = <ThrowOnError extends boolean = false>(options: Options<DeleteUsersDashboardPostsByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUsersDashboardPostsByIdResponse, DeleteUsersDashboardPostsByIdError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/posts/{id}'
}); };

/**
 * List of friends
 */
export const getUsersDashboardFriends = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetUsersDashboardFriendsResponse, GetUsersDashboardFriendsError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/friends'
}); };

/**
 * Create a friend relation
 */
export const postUsersDashboardFriends = <ThrowOnError extends boolean = false>(options?: Options<PostUsersDashboardFriendsData, ThrowOnError>) => { return (options?.client ?? client).post<PostUsersDashboardFriendsResponse, PostUsersDashboardFriendsError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/friends'
}); };

/**
 * Update a friend relation
 */
export const putUsersDashboardFriendsById = <ThrowOnError extends boolean = false>(options: Options<PutUsersDashboardFriendsByIdData, ThrowOnError>) => { return (options?.client ?? client).put<PutUsersDashboardFriendsByIdResponse, PutUsersDashboardFriendsByIdError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/friends/{id}'
}); };

/**
 * Delete a friend relation
 */
export const deleteUsersDashboardFriendsById = <ThrowOnError extends boolean = false>(options: Options<DeleteUsersDashboardFriendsByIdData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUsersDashboardFriendsByIdResponse, DeleteUsersDashboardFriendsByIdError, ThrowOnError>({
    ...options,
    url: '/users/dashboard/friends/{id}'
}); };